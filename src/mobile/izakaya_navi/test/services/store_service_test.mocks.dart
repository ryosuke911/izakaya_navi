// Mocks generated by Mockito 5.4.4 from annotations
// in izakaya_navi/test/services/store_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:geolocator/geolocator.dart' as _i7;
import 'package:izakaya_navi/api/hotpepper_api.dart' as _i3;
import 'package:izakaya_navi/models/hotpepper/area.dart' as _i2;
import 'package:izakaya_navi/models/location.dart' as _i8;
import 'package:izakaya_navi/models/venue.dart' as _i5;
import 'package:izakaya_navi/services/location_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMiddleAreaList_0 extends _i1.SmartFake
    implements _i2.MiddleAreaList {
  _FakeMiddleAreaList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HotpepperApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockHotpepperApi extends _i1.Mock implements _i3.HotpepperApi {
  MockHotpepperApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MiddleAreaList> getMiddleAreas() => (super.noSuchMethod(
        Invocation.method(
          #getMiddleAreas,
          [],
        ),
        returnValue: _i4.Future<_i2.MiddleAreaList>.value(_FakeMiddleAreaList_0(
          this,
          Invocation.method(
            #getMiddleAreas,
            [],
          ),
        )),
      ) as _i4.Future<_i2.MiddleAreaList>);

  @override
  _i4.Future<List<_i5.Venue>> searchByArea(
    String? areaCode, {
    Map<String, String>? additionalParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByArea,
          [areaCode],
          {#additionalParams: additionalParams},
        ),
        returnValue: _i4.Future<List<_i5.Venue>>.value(<_i5.Venue>[]),
      ) as _i4.Future<List<_i5.Venue>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i6.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i7.Position?> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i4.Future<_i7.Position?>.value(),
      ) as _i4.Future<_i7.Position?>);

  @override
  _i4.Future<_i8.Location?> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i4.Future<_i8.Location?>.value(),
      ) as _i4.Future<_i8.Location?>);

  @override
  _i4.Future<double> calculateDistance(
    _i8.Location? from,
    _i8.Location? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistance,
          [
            from,
            to,
          ],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);
}
